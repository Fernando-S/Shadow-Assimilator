auto Tile00_ColunaGO = new GameObject();
Tile00_ColunaGO->box.x = (0) * tileSet->GetTileWidth() + chaoGO->box.x;
Tile00_ColunaGO->box.y = (-12) * tileSet->GetTileHeight() + chaoGO->box.y;

auto tileMap_Tile00_Coluna = new TileMap(*Tile00_ColunaGO, "./assets/map/Level2/Tile00_Coluna.txt", tileSet);
tileMap_Tile00_Coluna->colide = true;

Tile00_ColunaGO->box.w = tileMap_Tile00_Coluna->GetWidth() * tileSet->GetTileWidth();
Tile00_ColunaGO->box.h = tileMap_Tile00_Coluna->GetHeight() * tileSet->GetTileHeight();

Tile00_ColunaGO->AddComponent(tileMap_Tile00_Coluna);
objectArray.emplace_back(Tile00_ColunaGO);


///////////////////////////////////////////////////////////////////////////////////////////////////////////////// 

auto Tile01_ColunaGO = new GameObject();
Tile01_ColunaGO->box.x = (20) * tileSet->GetTileWidth() + chaoGO->box.x;
Tile01_ColunaGO->box.y = (-12) * tileSet->GetTileHeight() + chaoGO->box.y;

auto tileMap_Tile01_Coluna = new TileMap(*Tile01_ColunaGO, "./assets/map/Level2/Tile01_Coluna.txt", tileSet);
tileMap_Tile01_Coluna->colide = true;

Tile01_ColunaGO->box.w = tileMap_Tile01_Coluna->GetWidth() * tileSet->GetTileWidth();
Tile01_ColunaGO->box.h = tileMap_Tile01_Coluna->GetHeight() * tileSet->GetTileHeight();

Tile01_ColunaGO->AddComponent(tileMap_Tile01_Coluna);
objectArray.emplace_back(Tile01_ColunaGO);


///////////////////////////////////////////////////////////////////////////////////////////////////////////////// 

auto Tile02_LinhaGO = new GameObject();
Tile02_LinhaGO->box.x = (1) * tileSet->GetTileWidth() + chaoGO->box.x;
Tile02_LinhaGO->box.y = (-9) * tileSet->GetTileHeight() + chaoGO->box.y;

auto tileMap_Tile02_Linha = new TileMap(*Tile02_LinhaGO, "./assets/map/Level2/Tile02_Linha.txt", tileSet);
tileMap_Tile02_Linha->colide = true;

Tile02_LinhaGO->box.w = tileMap_Tile02_Linha->GetWidth() * tileSet->GetTileWidth();
Tile02_LinhaGO->box.h = tileMap_Tile02_Linha->GetHeight() * tileSet->GetTileHeight();

Tile02_LinhaGO->AddComponent(tileMap_Tile02_Linha);
objectArray.emplace_back(Tile02_LinhaGO);


///////////////////////////////////////////////////////////////////////////////////////////////////////////////// 

auto Tile03_LinhaGO = new GameObject();
Tile03_LinhaGO->box.x = (4) * tileSet->GetTileWidth() + chaoGO->box.x;
Tile03_LinhaGO->box.y = (-4) * tileSet->GetTileHeight() + chaoGO->box.y;

auto tileMap_Tile03_Linha = new TileMap(*Tile03_LinhaGO, "./assets/map/Level2/Tile03_Linha.txt", tileSet);
tileMap_Tile03_Linha->colide = true;

Tile03_LinhaGO->box.w = tileMap_Tile03_Linha->GetWidth() * tileSet->GetTileWidth();
Tile03_LinhaGO->box.h = tileMap_Tile03_Linha->GetHeight() * tileSet->GetTileHeight();

Tile03_LinhaGO->AddComponent(tileMap_Tile03_Linha);
objectArray.emplace_back(Tile03_LinhaGO);


///////////////////////////////////////////////////////////////////////////////////////////////////////////////// 

auto Tile04_LinhaGO = new GameObject();
Tile04_LinhaGO->box.x = (12) * tileSet->GetTileWidth() + chaoGO->box.x;
Tile04_LinhaGO->box.y = (-4) * tileSet->GetTileHeight() + chaoGO->box.y;

auto tileMap_Tile04_Linha = new TileMap(*Tile04_LinhaGO, "./assets/map/Level2/Tile04_Linha.txt", tileSet);
tileMap_Tile04_Linha->colide = true;

Tile04_LinhaGO->box.w = tileMap_Tile04_Linha->GetWidth() * tileSet->GetTileWidth();
Tile04_LinhaGO->box.h = tileMap_Tile04_Linha->GetHeight() * tileSet->GetTileHeight();

Tile04_LinhaGO->AddComponent(tileMap_Tile04_Linha);
objectArray.emplace_back(Tile04_LinhaGO);


///////////////////////////////////////////////////////////////////////////////////////////////////////////////// 

